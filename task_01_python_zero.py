# -*- coding: utf-8 -*-
"""task_01_python_zero

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a96e2aMFGf8K-GZSv2zf6eimu0c79COB

# Primeiros passos

O interpretador Python √© um cara legal que gosta de conversar, mas ele √© um pouco repetitivo..

Os notebooks Jupyter se comunicam com o interpretador, mandando suas mensagens e mostrando as resposta que ele d√°. 

Clique no bot√£o de Play para executar a c√©lula abaixo (ou selecione a c√©lula e aperte Shift+Enter).
"""

"Oi Python!"

"""## Melhorando a conversa com o interpretador

>Se o interpretador apenas repete o que eu falo, pra que ele serve? ü§î
>*, perguntou um aluno apressado.*

O interpretador √© mais sagaz do que parece. Teste as c√©lulas abaixo:
"""

"Oi Python!".upper()

"Oi Python!".lower()

"Oi Python!" + " Tudo bom?"

"Oi Python!".split()

"""### Exerc√≠cios de fixa√ß√£o

EF1 - Pe√ßa pra o interpretador dizer **"Bom dia"** com letras min√∫sculas.
"""

"Bom dia"

"""EF2 - Pe√ßa pra o interpretador dizer **"Boa tarde"** com letras mai√∫sculas."""

"Boa tarde"

"""EF3 - Pe√ßa pra o interpretador dizer **"Bom dia ou Boa tarde?"**, sendo o **"Bom dia"** com letras mai√∫sculas e o **"boa tarde"** com letras min√∫sculas."""

"Bom dia".upper() + " ou " + "Boa tarde".lower()

"""### Exerc√≠cios complementares

EC1 - O que voc√™ acha que a op√ß√£o `split()` significa para o interpretador? Dica -- pesquise no Google Translate.

*Escreva sua resposta aqui*

A gente vai estudar o `split` com mais calma depois, mas por enquanto vamos ver um pouco sobre n√∫meros.

## Trabalhando com n√∫meros

O interpretador Python tamb√©m consegue lidar com n√∫meros e operadores aritm√©ticos, que podem ser usados para construir **express√µes aritm√©ticas**. 

As regras b√°sicas sobre express√µes aritm√©ticas em Python s√£o:

* Em geral, a preced√™ncia dos operadores em Python segue a preced√™ncia que conhecemos da matem√°tica. 
* Assim como na matem√°tica, √© poss√≠vel usar par√™nteses para mudar a ordem de avalia√ß√£o de uma express√£o.
* Caso reste apenas opera√ß√µes de mesma preced√™ncia, a express√£o passa a ser avaliada da esquerda para a direita.

Alguns dos operadores aritm√©ticos dispon√≠veis em Python est√£o listados abaixo.

| S√≠mbolo | Opera√ß√£o |
|:----:|---|
| +  | Adi√ß√£o |
| -  | Subtra√ß√£o |
| /  | Divis√£o |
| // | Divis√£o inteira |
| %  | Resto |
| *  | Multiplica√ß√£o |
| **  | Exponencia√ß√£o |

Teste as c√©lulas abaixo:
"""

1+2+5

2-1

1*2

3/4

2 ** 3

"""No entanto, voc√™ n√£o deve misturar textos e n√∫meros:"""

"Este √© um texto" + 3

"""### Exerc√≠cios de fixa√ß√£o

EF4 - Calcule o produto dos n√∫meros 11 e 12.
"""

11*12

"""EF5 - Calcule o quadrado do n√∫mero 16."""

16**2

"""EF6 - Calcule a raiz quadrada de 1024."""

1024 ** (1/2)

"""### Exerc√≠cios complementares

Os operadores // e % trabalham com divis√£o inteira. Por exemplo, dividir 15 por 10 considerando apenas n√∫mero inteiros √© igual a 1. O resto da divis√£o √© igual a 15 - (10*1), ou seja, 5.
"""

15//10

15%10

"""EC2 - Calcule o resto da divis√£o de 227 por 20."""

227%20

"""# Valores, nomes e vari√°veis

Em Python, tanto textos como n√∫meros s√£o chamados de *valores*. 

Podemos nos referir a valores usando *nomes*. 

>Em outras linguagens, usa-se o termo **vari√°vel** em vez de nome. Vamos adotar este termo aqui por ele ser mais universal.

Teste as c√©lulas abaixo:
"""

x = 2          # qualquer coisa ap√≥s o # √© um coment√°rio
y = 5
x + y

"""M√∫ltiplas vari√°veis podem estar associadas ao mesmo valor."""

x = y = 1
y

texto = 'Este √© um texto.' # textos podem ser escritos entre aspas simples
texto

outro_texto = "Este √© outro texto." # textos podem ser escritos entre aspas duplas
outro_texto

"""### Exerc√≠cios de fixa√ß√£o

Para verificar que seu c√≥digo est√° correto, lembre-se de acrescentar uma linha contendo apenas o nome da vari√°vel para visualizar o valor associado a ela.

EF7 - Associe uma vari√°vel `numero` ao n√∫mero `10`.
"""

x=10
x

"""EF8 - Associe uma vari√°vel `nome` ao texto `Python`."""

text="Python"
text

"""EF9 - Associe uma vari√°vel `resto` ao resultado do opera√ß√£o de resto entre `234` e `10`."""

resto=234%10

"""EF10 - Associe uma vari√°vel `k` ao valor `8`. Associe uma vari√°vel `quadrado_k` ao quadrado do valor associado √† vari√°vel `k`."""

k=8
quadrado_k=k**k
quadrado_k

"""EF11 - Associe uma v√°riavel `z` ao valor `256`. Associe uma vari√°vel `divisao_zk` ao resultado da divis√£o entre os valores associados √†s vari√°veis `z` e `k`."""

z=256
divisao_k=z//k
divisao_k

"""## Dados informados pelo usu√°rio

O procedimento `input()` solicita ao usu√°rio dados que podem ser associados a vari√°veis. √â poss√≠vel personalizar a mensagem de solicita√ß√£o, como mostrado abaixo.
"""

texto_usuario =  input("Diga um valor: ")
texto_usuario

"""Por padr√£o, qualquer dado passada pelo usu√°rio ser√° tratado como texto. Para trat√°-lo como um valor num√©rico, voc√™ deve usar os procedimentos `int()` ou `float()`, dependendo de serem n√∫meros inteiros ou reais."""

inteiro = int(input("Diga um valor inteiro: "))
inteiro + 1

real = float(input("Diga um valor real: "))
real + 1

"""### Exerc√≠cios de fixa√ß√£o

EF12 - Solicite ao usu√°rio *seu nome* e o associe a uma variav√©l chamada `nome`.
"""

nome = input("Diga o seu nome: ")
nome

"""EF13 - Solicite ao usu√°rio *sua idade* e a associe a uma vari√°vel chamada `idade`."""

idade = int(input("Diga a sua idade: "))
idade

"""EF14 - Solicite ao usu√°rio *sua altura* e a associe a uma vari√°vel chamada `altura`."""

altura = float(input("Diga a sua altura"))
altura

"""## Informando dados ao usu√°rio

Assim como √© poss√≠vel receber dados do usu√°rio, tamb√©m √© poss√≠vel informar dados ao usu√°rio.

Para isto, usamos o procedimento `print()`.
"""

print(texto)

"""√â poss√≠vel informar os valores associados a m√∫ltiplas vari√°veis com uma √∫nica chamada ao procedimento `print()`."""

print(texto, x)

"""Tamb√©m √© poss√≠vel informar textos, valores e o resultado de express√µes:"""

print("Testando", 3, x + y)

"""### Exerc√≠cios de fixa√ß√£o

EF15 - Informe ao usu√°rio **seu nome**.
"""

print(nome)

"""EF16 - Informe ao usu√°rio **sua idade**."""

print(idade)

"""EF17 - Informe ao usu√°rio **seu √≠ndice de massa corporal (IMC)**. Para isso, solicite ao usu√°rio seu peso."""

peso = float(input("Diga o seu peso: "))
imc = peso // altura**altura
print("Seu IMC √©: ", imc)

"""## Exerc√≠cios do URI

O URI √© um juiz online utilizado em treinamentos para competi√ß√µes de programa√ß√£o.

Nesta disciplina, utilizaremos exerc√≠cios inspirados na se√ß√£o **Iniciante**, adaptados para o nosso contexto.

Para ver a descri√ß√£o do exerc√≠cio em sua vers√£o original do URI, clique no seu n√∫mero.

[1008](https://www.urionlinejudge.com.br/judge/pt/problems/view/1008) - Um sistema do setor de recursos humanos de uma empresa deve calcular o sal√°rio a ser pago para cada funcion√°rio da empresa em fun√ß√£o de quantas horas o funcion√°rio trabalhou no m√™s e de quanto ele recebe por hora trabalhada.

Escreva um c√≥digo Python que leia o nome de um funcion√°rio, seu n√∫mero de horas trabalhadas, o valor que recebe por hora e calcula seu sal√°rio. Em seguida, mostre o nome e o sal√°rio do funcion√°rio.

|.| Entrada | Sa√≠da |
|-|----|---|
| *Exemplo 1* | Jo√£o 100 5.50  | Jo√£o 550.00 | 
| *Exemplo 2* | Maria 200 20.50 | Maria 4100.00 |
| *Exemplo 3* | Facebookson 145 15.55 | Facebookson 2254.75 |
"""

nome = input("Diga o seu nome: ")
horas_trabalhadas = int(input("Diga a sua quantidade de horas trabalhadas: "))
valor_por_hora = float(input("Diga o quanto receve por hora: "))
salario = horas_trabalhadas * valor_por_hora
print(nome, salario)

"""[1009](https://www.urionlinejudge.com.br/judge/pt/problems/view/1009) - No caso de empresas do setor de com√©rcio, a remunera√ß√£o mensal de cada vendedor √© composta por um sal√°rio fixo mais uma bonifica√ß√£o proporcional √†s vendas efetuadas pelo vendedor naquele m√™s.

Escreva um c√≥digo Python que leia o nome de um vendedor, o seu sal√°rio fixo e o total de vendas efetuadas por ele no m√™s (em dinheiro). Sabendo que este vendedor ganha 15% de comiss√£o sobre suas vendas efetuadas, informe o total que ele dever√° receber no final do m√™s.

|.| Entrada | Sa√≠da |
|-|----|---|
| *Exemplo 1* | Jo√£o 500 1230.30  | Jo√£o 684.54 | 
| *Exemplo 2* | Pedro 700 0.00 | Pedro 700.00 |
| *Exemplo 3* | Mangojata 1700 1230.50 | Mangojata 1884.58 |
"""

nome = input("Diga o seu nome: ")
salario = float(input("Diga o seu sal√°rio: "))
valor_total_vendas = float(input("Diga o seu n√∫mero de vendas efetuadas: "))
salario_final = salario + (valor_total_vendas * 0.15)
print(nome, salario_final)

"""[1010](https://www.urionlinejudge.com.br/judge/pt/problems/view/1010) - Outro tipo de sistema utilizado no setor de com√©rcio √© o sistema de frente de loja, que calcula o total de uma venda baseado nos itens adquiridos, suas quantidades e seus valores unit√°rios.

Escreva um c√≥digo Python que leia as informa√ß√µes de dois produtos adquiridos em uma compra e informe o valor a ser pago. Para cada produto, leia seu c√≥digo, sua quantidade e seu valor unit√°rio.

|.| Entrada | Sa√≠da |
|-|----|---|
| *Exemplo 1* | 12 1 5.30 <br> 16 2 5.10 | VALOR A PAGAR: 15.50 |
| *Exemplo 2* | 13 2 15.30 <br> 161 4 5.20 | VALOR A PAGAR: 51.40 |
| *Exemplo 3* | 1 1 15.10 <br> 2 1 15.10 | VALOR A PAGAR: 30.20 |
"""

codigo1 = int(input("Informe o c√≥digo do primeiro produto: "))
quantidade1 = int(input("Informe a quantidade do primeiro produto: "))
valor1 = float(input("Informe o valor do primeiro produto: "))
codigo2 = int(input("Informe o c√≥digo do segundo produto: "))
quantidade2 = int(input("Informe a quantidade do segundo produto: "))
valor2 = float(input("Informe o valor do segundo produto: "))
valor_total = ((quantidade1 * valor1) + (quantidade2 * valor2))
print("VALOR TOTAL A PAGAR: ", valor_total)

"""[1018](https://www.urionlinejudge.com.br/judge/pt/problems/view/1018) - Sistemas de frente de loja tamb√©m devem auxiliar vendedores a dar trocos. Por simplicidade, vamos considerar primeiro apenas trocos inteiros, que podem ser dados usando apenas c√©dulas.

Escreva um c√≥digo Python que leia um valor de troco e informe quantas c√©dulas de cada valor devem ser entregues pelo vendedor ao cliente.

**Obs.:** Considere que ainda existem notas de R$ 1,00.

|.| Entrada | Sa√≠da |
|-|----|---|
| *Exemplo 1* | 576 | 5 nota(s) de 100,00 <br /> 1 nota(s) de 50,00 <br /> 1 nota(s) de 20,00 <br /> 0 nota(s) de 10,00 <br /> 1 nota(s) de 5,00  <br /> 0 nota(s) de 2,00  <br /> 1 nota(s) de 1,00 |
| *Exemplo 2* | 11257 | 112 nota(s) de 100,00 <br /> 1 nota(s) de 50,00 <br /> 0 nota(s) de 20,00 <br /> 0 nota(s) de 10,00 <br /> 1 nota(s) de 5,00 <br /> 1 nota(s) de 2,00 <br /> 0 nota(s) de 1,00 |
| *Exemplo 3* | 503 | 5 nota(s) de 100,00 <br /> 0 nota(s) de 50,00 <br /> 0 nota(s) de 20,00 <br /> 0 nota(s) de 10,00 <br /> 0 nota(s) de 5,00 <br /> 1 nota(s) de 2,00 <br /> 1 nota(s) de 1,00 |
"""

valor_troco = int(input("Digite o valor do troco: "))
cedula100 = 0
cedula50 = 0
cedula20 = 0
cedula10 = 0
cedula5 = 0
cedula2 = 0
cedula1 = 0

while (valor_troco >= 100):
  cedula100+=1;
  valor_troco = valor_troco - 100

while (valor_troco >= 50):
  cedula50+=1;
  valor_troco = valor_troco - 50

while (valor_troco >= 20):
  cedula20+=1;
  valor_troco = valor_troco - 20

while (valor_troco >= 10):
  cedula10+=1;
  valor_troco = valor_troco - 10

while (valor_troco >= 5):
  cedula5+=1;
  valor_troco = valor_troco - 5

while (valor_troco >= 2):
  cedula2+=1;
  valor_troco = valor_troco - 2

while (valor_troco >= 1):
  cedula1+=1;
  valor_troco = valor_troco - 1
  
print(cedula100, " nota(s) de 100,00")  
print(cedula50, " nota(s) de 50,00")  
print(cedula20, " nota(s) de 20,00")  
print(cedula10, " nota(s) de 10,00")  
print(cedula5, " nota(s) de 5,00")  
print(cedula2, " nota(s) de 2,00")  
print(cedula1, " nota(s) de 1,00")

"""[1021](https://www.urionlinejudge.com.br/judge/pt/problems/view/1021) - Agora vamos voltar ao mundo real, onde trocos podem precisar utilizar c√©dulas e moedas.

Escreva um c√≥digo Python que leia um valor de troco e informe quantas c√©dulas e moedas de cada valor devem ser entregues pelo vendedor ao cliente.

**Obs.:** Considere que ainda existem moedas de R$ 0,01.

|.| Entrada | Sa√≠da |
|-|----|---|
| *Exemplo 1* | 576.73 | NOTAS: <br /> 5 nota(s) de 100,00 <br /> 1 nota(s) de 50,00 <br /> 1 nota(s) de 20,00 <br /> 0 nota(s) de 10,00 <br /> 1 nota(s) de 5,00  <br /> 0 nota(s) de 2,00  <br /> MOEDAS: <br /> 1 moeda(s) de 1,00 <br /> 1 moeda(s) de 0,50 <br /> 0 moeda(s) de 0,25 <br /> 2 moeda(s) de 0,10 <br /> 0 moeda(s) de 0,05 <br /> 3 moeda(s) de 0,01 |
| *Exemplo 2* | 4.00 | NOTAS: <br /> 0 nota(s) de 100,00 <br /> 0 nota(s) de 50,00 <br /> 0 nota(s) de 20,00 <br /> 0 nota(s) de 10,00 <br /> 0 nota(s) de 5,00  <br /> 2 nota(s) de 2,00 <br /> MOEDAS: <br /> 0 moeda(s) de 1,00 <br /> 0 moeda(s) de 0,50 <br /> 0 moeda(s) de 0,25 <br /> 0 moeda(s) de 0,10 <br /> 0 moeda(s) de 0,05 <br /> 0 moeda(s) de 0,01 |
| *Exemplo 3* | 91.01 | NOTAS: <br /> 0 nota(s) de 100,00 <br /> 1 nota(s) de 50,00 <br /> 2 nota(s) de 20,00 <br /> 0 nota(s) de 10,00 <br /> 0 nota(s) de 5,00  <br /> 0 nota(s) de 2,00 <br /> MOEDAS: <br /> 1 moeda(s) de 1,00 <br /> 0 moeda(s) de 0,50 <br /> 0 moeda(s) de 0,25 <br /> 0 moeda(s) de 0,10 <br /> 0 moeda(s) de 0,05 <br /> 1 moeda(s) de 0,01 |
"""

valor_troco = float(input("Digite o valor do troco: "))
cedula100 = 0
cedula50 = 0
cedula20 = 0
cedula10 = 0
cedula5 = 0
cedula2 = 0
moeda1real = 0
moeda50cent = 0
moeda25cent = 0
moeda10cent = 0
moeda5cent = 0
moeda1cent = 0

while (valor_troco >= 100):
  cedula100+=1;
  valor_troco = valor_troco - 100

while (valor_troco >= 50):
  cedula50+=1;
  valor_troco = valor_troco - 50

while (valor_troco >= 20):
  cedula20+=1;
  valor_troco = valor_troco - 20

while (valor_troco >= 10):
  cedula10+=1;
  valor_troco = valor_troco - 10

while (valor_troco >= 5):
  cedula5+=1;
  valor_troco = valor_troco - 5

while (valor_troco >= 2):
  cedula2+=1;
  valor_troco = valor_troco - 2

while (valor_troco >= 1):
  moeda1real+=1;
  valor_troco = valor_troco - 1

while (valor_troco >= 0.50):
  moeda50cent+=1;
  valor_troco = valor_troco - 0.50

while (valor_troco >= 0.25):
  moeda25cent+=1;
  valor_troco = valor_troco - 0.25 

while (valor_troco >= 0.10):
  moeda10cent+=1;
  valor_troco = valor_troco - 0.10  

while (valor_troco >= 0.05):
  moeda5cent+=1;
  valor_troco = valor_troco - 0.05  

while (valor_troco >= 0.01):
  moeda1cent+=1;
  valor_troco = valor_troco - 0.01  

print("NOTAS:")
print(cedula100, " nota(s) de 100,00")  
print(cedula50, " nota(s) de 50,00")  
print(cedula20, " nota(s) de 20,00")  
print(cedula10, " nota(s) de 10,00")  
print(cedula5, " nota(s) de 5,00")  
print(cedula2, " nota(s) de 2,00")  
print("MOEADAS:")
print(moeda1real, " moeada(s) de 1,00")
print(moeda50cent, " moeada(s) de 0,50")
print(moeda25cent, " moeada(s) de 0,25")
print(moeda10cent, " moeada(s) de 0,10")
print(moeda5cent, " moeada(s) de 0,5")
print(moeda1cent, " moeada(s) de 0,1")

"""[1019](https://www.urionlinejudge.com.br/judge/pt/problems/view/1019) - Sistemas de frente de loja tamb√©m precisam registrar a data e o hor√°rio das vendas. 

Computadores normalmente armazenam datas utilizando uma √∫nica unidade de tempo, convertendo para o formato de apresenta√ß√£o desejado quando necess√°rio. Por simplicidade, considere neste exerc√≠cio que o dado informado representa apenas o hor√°rio da venda.

Escreva um c√≥digo Python que leia um valor em segundos e o converta para o formato *horas:minutos:segundos*.

**Dica 1 --** a op√ß√£o sep do procedimento print() permite configurar o caracter de separa√ß√£o entre as diferentes partes de uma impress√£o, como no exemplo abaixo.
"""

print(10,33,51,sep=":")

"""**Dica 2 --** √© poss√≠vel utilizar o procedimento print para impress√£o formatada. Pesquise o funcionamento da m√°scara de formata√ß√£o abaixo:"""

print("%02d:%02d:%02d" % (9,33,51))

"""|.| Entrada | Sa√≠da |
|-|----|---|
| *Exemplo 1* | 556  | 00:09:16 | 
| *Exemplo 2* | 1 | 00:00:01 |
| *Exemplo 3* | 86153 | 23:55:53 |
"""

tempo_total_segundos = int(input("Escreva um valor em segundos: "))
horas = tempo_total_segundos / 3600
tempo_total_segundos = tempo_total_segundos % 3600
minutos = tempo_total_segundos / 60
segundos = tempo_total_segundos = tempo_total_segundos % 60
print("%02d:%02d:%02d" % (horas, minutos, segundos))

